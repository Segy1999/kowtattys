{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\segye\\\\Desktop\\\\ktat\\\\src\\\\components\\\\Hero.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport { TextPlugin } from 'gsap/TextPlugin';\nimport AnimatedCowHead from './CowHead';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ngsap.registerPlugin(TextPlugin);\nconst Hero = () => {\n  _s();\n  const textRef = useRef(null);\n  const cowRef = useRef(null);\n  useEffect(() => {\n    const text = 'KowTattys';\n    const textArray = text.split('');\n    const textTimeline = gsap.timeline({\n      repeat: -1\n    });\n    textArray.forEach((char, index) => {\n      textTimeline.to(textRef.current, {\n        duration: 0.1,\n        text: textArray.slice(0, index + 1).join('')\n      });\n    });\n    textTimeline.eventCallback('onComplete', () => {\n      const cowTimeline = gsap.timeline();\n      cowTimeline.to(cowRef.current, {\n        duration: 1,\n        opacity: 1\n      });\n      cowTimeline.to(cowRef.current, {\n        duration: 2,\n        repeat: -1,\n        yoyo: true,\n        y: -10\n      });\n    });\n    textTimeline.eventCallback('onComplete', () => {\n      gsap.delayedCall(5, () => {\n        textTimeline.restart();\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      ref: textRef,\n      className: \"text-5xl font-bold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatedCowHead, {\n      ref: cowRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Hero, \"El+r5xfZXCDDHgr0w/4DrrjR1kk=\");\n_c = Hero;\nexport default Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["React","useEffect","useRef","gsap","TextPlugin","AnimatedCowHead","jsxDEV","_jsxDEV","registerPlugin","Hero","_s","textRef","cowRef","text","textArray","split","textTimeline","timeline","repeat","forEach","char","index","to","current","duration","slice","join","eventCallback","cowTimeline","opacity","yoyo","y","delayedCall","restart","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/segye/Desktop/ktat/src/components/Hero.tsx"],"sourcesContent":["import React, { FC, useEffect, useRef } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport { TextPlugin } from 'gsap/TextPlugin';\r\nimport AnimatedCowHead from './CowHead';\r\n\r\ngsap.registerPlugin(TextPlugin);\r\n\r\ninterface HeroProps {\r\n  // Add any props you need here\r\n}\r\n\r\nconst Hero: FC<HeroProps> = () => {\r\n  const textRef = useRef<HTMLSpanElement>(null);\r\n  const cowRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const text = 'KowTattys';\r\n    const textArray = text.split('');\r\n    const textTimeline = gsap.timeline({ repeat: -1 });\r\n\r\n    textArray.forEach((char, index) => {\r\n      textTimeline.to(textRef.current, {\r\n        duration: 0.1,\r\n        text: textArray.slice(0, index + 1).join(''),\r\n      });\r\n    });\r\n\r\n    textTimeline.eventCallback('onComplete', () => {\r\n      const cowTimeline = gsap.timeline();\r\n      cowTimeline.to(cowRef.current, {\r\n        duration: 1,\r\n        opacity: 1,\r\n      });\r\n      cowTimeline.to(cowRef.current, {\r\n        duration: 2,\r\n        repeat: -1,\r\n        yoyo: true,\r\n        y: -10,\r\n      });\r\n    });\r\n\r\n    textTimeline.eventCallback('onComplete', () => {\r\n      gsap.delayedCall(5, () => {\r\n        textTimeline.restart();\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-screen\">\r\n      <span ref={textRef} className=\"text-5xl font-bold\" />\r\n      <AnimatedCowHead ref={cowRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACpD,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,OAAOC,eAAe,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExCJ,IAAI,CAACK,cAAc,CAACJ,UAAU,CAAC;AAM/B,MAAMK,IAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,OAAO,GAAGT,MAAM,CAAkB,IAAI,CAAC;EAC7C,MAAMU,MAAM,GAAGV,MAAM,CAAiB,IAAI,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACd,MAAMY,IAAI,GAAG,WAAW;IACxB,MAAMC,SAAS,GAAGD,IAAI,CAACE,KAAK,CAAC,EAAE,CAAC;IAChC,MAAMC,YAAY,GAAGb,IAAI,CAACc,QAAQ,CAAC;MAAEC,MAAM,EAAE,CAAC;IAAE,CAAC,CAAC;IAElDJ,SAAS,CAACK,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACjCL,YAAY,CAACM,EAAE,CAACX,OAAO,CAACY,OAAO,EAAE;QAC/BC,QAAQ,EAAE,GAAG;QACbX,IAAI,EAAEC,SAAS,CAACW,KAAK,CAAC,CAAC,EAAEJ,KAAK,GAAG,CAAC,CAAC,CAACK,IAAI,CAAC,EAAE;MAC7C,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFV,YAAY,CAACW,aAAa,CAAC,YAAY,EAAE,MAAM;MAC7C,MAAMC,WAAW,GAAGzB,IAAI,CAACc,QAAQ,CAAC,CAAC;MACnCW,WAAW,CAACN,EAAE,CAACV,MAAM,CAACW,OAAO,EAAE;QAC7BC,QAAQ,EAAE,CAAC;QACXK,OAAO,EAAE;MACX,CAAC,CAAC;MACFD,WAAW,CAACN,EAAE,CAACV,MAAM,CAACW,OAAO,EAAE;QAC7BC,QAAQ,EAAE,CAAC;QACXN,MAAM,EAAE,CAAC,CAAC;QACVY,IAAI,EAAE,IAAI;QACVC,CAAC,EAAE,CAAC;MACN,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFf,YAAY,CAACW,aAAa,CAAC,YAAY,EAAE,MAAM;MAC7CxB,IAAI,CAAC6B,WAAW,CAAC,CAAC,EAAE,MAAM;QACxBhB,YAAY,CAACiB,OAAO,CAAC,CAAC;MACxB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,oDAAoD;IAAAC,QAAA,gBACjE5B,OAAA;MAAM6B,GAAG,EAAEzB,OAAQ;MAACuB,SAAS,EAAC;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrDjC,OAAA,CAACF,eAAe;MAAC+B,GAAG,EAAExB;IAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA3CID,IAAmB;AAAAgC,EAAA,GAAnBhC,IAAmB;AA6CzB,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}